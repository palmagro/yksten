//Neo4j URL
var restServerURL = "http://0.0.0.0:7474/db/data";

//Método para extraer el esquema de Neo4j
get_schema = function()
{
	// What is related, and how
	getSchemaCyph = 
	{
	  "query" : "MATCH (a)-[r]->(b) RETURN DISTINCT head(labels(a)) AS This, type(r) as To, head(labels(b)) AS That LIMIT 100",
	  "params" : {	  }
	};
	$.ajax({
       async: false, 
       type: "POST",
       url: restServerURL + "/cypher",
       data: JSON.stringify(getSchemaCyph),
       dataType: "json",
       contentType: "application/json",
       success: function( data ) {
		   print(data);
		   print('Schema retrieved...');
           schema = data;
		   
       },
       error: function( xhr ) {
		   print('error retrieving schema');
           window.console && console.log( xhr );
       },
       complete: function(data) {

       }
   });
}

//Método para buscar unnodo huérfano
get_orphan = function(rel_t,b_t)
{
	getOrphanCyph = 
	{
	  "query" : "MATCH (b:"+b_t+") WHERE NOT ()-[: "+rel_t+"]->(b) RETURN b",
	  "params" : 
	  {
		
	  }
	};
	$.ajax({
       async: false, 
       type: "POST",
       url: restServerURL + "/cypher",
       data: JSON.stringify(getOrphanCyph),
       dataType: "json",
       contentType: "application/json",
       success: function( data ) {
		   console.log(data);
		   if(data.data.length>0)
		   {
			   console.log("Orphan finded...")
			   orphan = data.data[0][0];
		   }	   
       },
       error: function( xhr ) {
		   print('error retrieving orphan');
           window.console && console.log( xhr );
       },
       complete: function(data) {

       }
   });
}

//Método para buscar un nodo huérfano a 
get_orphan = function(rel_t,b_t)
{
	getOrphanCyph = 
	{
	  "query" : "MATCH (b:"+b_t+") WHERE NOT ()-[: "+rel_t+"]->(b) RETURN b",
	  "params" : 
	  {
		
	  }
	};
	$.ajax({
       async: false, 
       type: "POST",
       url: restServerURL + "/cypher",
       data: JSON.stringify(getOrphanCyph),
       dataType: "json",
       contentType: "application/json",
       success: function( data ) {
		   console.log(data);
		   if(data.data.length>0)
		   {
			   console.log("Orphan finded...")
			   orphan = data.data[0][0];
		   }	   
       },
       error: function( xhr ) {
		   print('error retrieving orphan');
           window.console && console.log( xhr );
       },
       complete: function(data) {

       }
   });
}

//Método para obtener la relación inversa a otra
get_inverse_relation = function (r_type)
{

    print("Obteniendo relación inversa..."); 
	
	getInverseCyph =
	{
		query: "MATCH ()-[r:"+r_type+"]->() return r.inverse LIMIT 1",
		params: 
		{
			
		}				
	}

	$.ajax({
       async: false, 
       type: "POST",
       url: restServerURL + "/cypher",
       data: JSON.stringify(getInverseCyph),
       dataType: "json",
       contentType: "application/json",
       success: function( data ) {
		   print("Obtenida inversa");
		   console.log(data.data[0][0]);
           inv_rel_type = data.data[0][0];
       },
       error: function( xhr ) {
		   print("Error obteniendo inversa");
           window.console && console.log( xhr );
       },
       complete: function(data) {
       }
   });
}


//Función que crea un nodo
add_node = function(text,type)
{
    print("Añadiendo nodo..."); 
			
	addNodeCyph =
	{
		query: "MERGE (n:"+type+" {name:{value_name}}) ON MATCH SET n = {values} ON CREATE SET n = {values} RETURN n",
		params: 
		{
			value_name: text,
			values: {name:text}
		}				
	}

	$.ajax({
       async: false, 
       type: "POST",
       url: restServerURL + "/cypher",
       data: JSON.stringify(addNodeCyph),
       dataType: "json",
       contentType: "application/json",
       success: function( data ) {
		   print("Añadido nodo");
		   console.log(data.data[0][0]);
		   a = data.data[0][0];
       },
       error: function( xhr ) {
		   print("Error añadiendo nodo");
           window.console && console.log( xhr );
       },
       complete: function(data) {
       }
   });

}

//Función que crea una relación
add_rel = function(a,a_t,rel_type,b,b_t)
{
	var a_name = a.data.name;
	var b_name = b.data.name;
	addRelCyph =  
	{
		query: "MATCH (n:"+a_t+" {name:{name_a}}),(m:"+b_t+" {name:{name_b}}) MERGE (n)-[r:"+rel_type+"]->(m)",
		params:
		{
			name_a:a_name,
			name_b:b_name
		}
	};

	$.ajax({
       async: false, 
       type: "POST",
       url: restServerURL + "/cypher",
       data: JSON.stringify(addRelCyph),
       dataType: "json",
       contentType: "application/json",
       success: function( data ) {
		   print("Añadida relación");
		   search_question();
		   make_question();
       },
       error: function( xhr ) {
		   print("Error añadiendo relación");
           window.console && console.log( xhr );
       },
       complete: function(data) {
       }
   });

}


